version: "3"
name: elon-launchpad
volumes:
  data:
  grafana:
  loki:
  prometheus:


services:
  stasdExporter:
    image: prom/statsd-exporter
    ports:
      - 9102:9102
    command: --statsd.mapping-config=/etc/statsd-exporter/mapping.yml
    volumes:
      - ./statsd-exporter.yml:/etc/statsd-exporter/mapping.yml

  prometheus:
    image: prom/prometheus:v2.30.3
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
  loki:
    image: grafana/loki:2.7.4
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki:/loki
  promtail:
    image: grafana/promtail:2.7.4
    volumes:
      - data:/var/log
    command: -config.file=/etc/promtail/config.yml
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=grafanapw
    volumes:
      - grafana:/var/lib/grafana
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:15.2
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - data:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.0.9
  backend:
    depends_on:
      postgres:
        condition: service_healthy
      loki:
        condition: service_healthy
      prometheus:
        condition: service_healthy
    ports:
      - 3000:3000
    environment:
        - DATABASE_URL=postgres://postgres:postgrespw@postgres:5432/postgres
        - LOGGING_URL=http://loki:3100/loki/api/v1/push
        - PROMETHEUS_URL=http://prometheus:9090
        - REDIS_URL=redis://redis:6379
        - STATSD_URL=http://statsd:9102
        - PORT=3000
    build:
      context: ../backend/
      dockerfile: ../backend/Dockerfile
  frontend:
    ports:
      - 3001:3001
    environment:
        - BACKEND_URL=http://backend:3000
        - PORT=3001
    build:
      context: ../frontend/
      dockerfile: ../frontend/Dockerfile