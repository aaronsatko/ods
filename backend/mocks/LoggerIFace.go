// Code generated by mockery v2.24.0. DO NOT EDIT.

package mocks

import (
	logrus "github.com/sirupsen/logrus"
	mock "github.com/stretchr/testify/mock"
)

// LoggerIFace is an autogenerated mock type for the LoggerIFace type
type LoggerIFace struct {
	mock.Mock
}

// Error provides a mock function with given fields: _a0
func (_m *LoggerIFace) Error(_a0 ...string) {
	_va := make([]interface{}, len(_a0))
	for _i := range _a0 {
		_va[_i] = _a0[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// Info provides a mock function with given fields: _a0
func (_m *LoggerIFace) Info(_a0 ...string) {
	_va := make([]interface{}, len(_a0))
	for _i := range _a0 {
		_va[_i] = _a0[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// InfoWithFields provides a mock function with given fields: _a0, _a1
func (_m *LoggerIFace) InfoWithFields(_a0 logrus.Fields, _a1 ...string) {
	_va := make([]interface{}, len(_a1))
	for _i := range _a1 {
		_va[_i] = _a1[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

type mockConstructorTestingTNewLoggerIFace interface {
	mock.TestingT
	Cleanup(func())
}

// NewLoggerIFace creates a new instance of LoggerIFace. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLoggerIFace(t mockConstructorTestingTNewLoggerIFace) *LoggerIFace {
	mock := &LoggerIFace{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
